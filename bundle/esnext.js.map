{
  "version": 3,
  "sources": ["../source/global.ts", "../source/tools.ts", "../source/reference.ts", "../source/attribute-name.ts", "../source/display.ts", "../source/update.ts", "../source/event.ts", "../source/attribute-value.ts", "../source/text.ts", "../source/action.ts", "../source/bind.ts", "../source/initialize.ts", "../source/dash.ts", "../source/define.ts", "../source/style.ts", "../source/index.ts"],
  "sourcesContent": ["import { Global } from './types';\n\nexport const global: Global = (globalThis as any).XGLOBAL ?? ((globalThis as any).XGLOBAL = Object.freeze({\n    // QueueNext: undefined,\n    // QueueCurrent: undefined,\n\n    Bound: new WeakMap(),\n    BindersCache: new Set(),\n\n    // GlobalBinders: new Set(),\n    // LocalBinders: new Set(),\n    // QueueBinders: new Set(),\n\n    // VirtualCache: new WeakMap(),\n\n    TemplatesCache: new WeakMap(),\n    ContainersCache: new WeakMap(),\n\n    MarkSymbol: Symbol('mark'),\n    ViewSymbol: Symbol('view'),\n\n    TemplateSymbol: Symbol('template'),\n    VariablesSymbol: Symbol('variables'),\n}));\n\nexport const {\n    // QueueNext,\n    // QueueCurrent,\n\n    BindersCache,\n\n    // GlobalBinders,\n    // LocalBinders,\n    // QueueBinders,\n\n    // VirtualCache,\n\n    TemplatesCache,\n    ContainersCache,\n\n    MarkSymbol,\n    ViewSymbol,\n    TemplateSymbol,\n    VariablesSymbol,\n} = global;\n", "/**\n * @type {NodeFilter.SHOW_TEXT}\n */\nexport const SHOW_TEXT = 4;\n\n/**\n * @type {NodeFilter.SHOW_ELEMENT}\n */\nexport const SHOW_ELEMENT = 1;\n\n/**\n * @type {Node.TEXT_NODE}\n */\nexport const TEXT_NODE = 3;\n\n/**\n * @type {Node.COMMENT_NODE}\n */\nexport const COMMENT_NODE = 3;\n\n/**\n * @type {Node.ELEMENT_NODE}\n */\nexport const ELEMENT_NODE = 1;\n\n/**\n * @type {Node.ATTRIBUTE_NODE}\n */\nexport const ATTRIBUTE_NODE = 2;\n\n/**\n * @type {Node.DOCUMENT_FRAGMENT_NODE}\n */\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n\n// https://html.spec.whatwg.org/multipage/indices.html#attributes-1\n// https://www.w3.org/TR/REC-html40/index/attributes.html\nconst patternLink = new RegExp(\n    [\n        '^[.@$]?(',\n        [\n            'src',\n            'href',\n            'data',\n            'action',\n            'srcdoc',\n            'xlink:href',\n            'cite',\n            'formaction',\n            'ping',\n            'poster',\n            'background',\n            'classid',\n            'codebase',\n            'longdesc',\n            'profile',\n            'usemap',\n            'icon',\n            'manifest',\n            'archive',\n        ].join('|'),\n        ')',\n    ].join(''),\n    'i',\n);\n\n// https://html.spec.whatwg.org/multipage/indices.html#attributes-1\nconst patternBool = new RegExp(\n    [\n        '^[.@$]?(',\n        [\n            'hidden',\n            'allowfullscreen',\n            'async',\n            'autofocus',\n            'autoplay',\n            'checked',\n            'controls',\n            'default',\n            'defer',\n            'disabled',\n            'formnovalidate',\n            'inert',\n            'ismap',\n            'itemscope',\n            'loop',\n            'multiple',\n            'muted',\n            'nomodule',\n            'novalidate',\n            'open',\n            'playsinline',\n            'readonly',\n            'required',\n            'reversed',\n            'selected',\n        ].join('|'),\n        ')',\n    ].join(''),\n    'i',\n);\n\nconst patternAnimation = /^[.@$]?onanimation$/i;\nconst patternTimeout = /^[.@$]?ontimeout$/i;\nconst patternOnce = /^[.@$]?ononce$/i;\nconst patternValue = /^[.@$]?value$/i;\nconst patternOn = /^[.@$]?on/i;\nconst patternMarker = /^x-[0-9]{10}-x$/i;\n// const safePattern = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i;\nconst safePattern = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\\/?#]*(?:[\\/?#]|$))/i;\n\nexport const isLink = function (data: string): boolean {\n    return data && typeof data === 'string' ? patternLink.test(data) : false;\n};\n\nexport const isBool = function (data: string): boolean {\n    return data && typeof data === 'string' ? patternBool.test(data) : false;\n};\n\nexport const isIterable = function (data: any): boolean {\n    return data && typeof data !== 'string' && typeof data[Symbol.iterator] === 'function';\n};\n\nexport const isAnimation = function (data: string): boolean {\n    return data && typeof data === 'string' ? patternAnimation.test(data) : false;\n};\n\nexport const isOnce = function (data: string): boolean {\n    return data && typeof data === 'string' ? patternOnce.test(data) : false;\n};\n\nexport const isTimeout = function (data: string): boolean {\n    return data && typeof data === 'string' ? patternTimeout.test(data) : false;\n};\n\nexport const isValue = function (data: string): boolean {\n    return data && typeof data === 'string' ? patternValue.test(data) : false;\n};\n\nexport const hasOn = function (data: string): boolean {\n    return data && typeof data === 'string' ? patternOn.test(data) : false;\n};\n\nexport const isMarker = function (data: string): boolean {\n    return data && typeof data === 'string' ? patternMarker.test(data) : false;\n};\n\nexport const matchMarker = function (data: string, marker: string): boolean {\n    return data && marker &&\n            typeof data === 'string' &&\n            typeof marker === 'string'\n        ? data.toLowerCase() === marker.toLowerCase()\n        : false;\n};\n\nexport const hasMarker = function (data: string, marker: string): boolean {\n    return data && typeof data === 'string' ? data.indexOf(marker) !== -1 : false;\n};\n\nexport const sliceOn = function (data: string): string {\n    return data && typeof data === 'string' ? data.replace(patternOn, '') : '';\n};\n\nexport const isConnected = function (node: Node): boolean {\n    if (node.nodeType === Node.ATTRIBUTE_NODE) {\n        return node.parentNode?.isConnected ?? false;\n    } else {\n        return node.isConnected;\n    }\n    // return (\n    //     !node.ownerDocument ||\n    //     !(\n    //       node.ownerDocument.compareDocumentPosition(node) &\n    //       node.DOCUMENT_POSITION_DISCONNECTED\n    //     )\n    // );\n};\n\n// export const includes = function (item: string | Array<any>, search: any) {\n//     return item.indexOf(search) !== -1;\n// };\n\nexport const mark = function (): string {\n    return `x-${`${Math.floor(Math.random() * Date.now())}`.slice(0, 10)}-x`;\n};\n\nexport const dangerousLink = function (data: string): boolean {\n    if (data === '') return false;\n    if (typeof data !== 'string') return false;\n    return safePattern.test(data) ? false : true;\n};\n\n/**\n *  DOM mod methods\n */\n\nexport const removeBetween = function (start: Node, end: Node) {\n    let node = end.previousSibling;\n    while (node && node !== start) {\n        node.parentNode?.removeChild(node);\n        node = end.previousSibling;\n    }\n};\n\nexport const removeNode = function (node: Node): void {\n    (node.parentNode as Node).removeChild(node);\n};\n\nexport const beforeNode = function (node: Node | string, child: Node): void {\n    if (!(node instanceof Node)) node = (child.ownerDocument as Document).createTextNode(`${node}`);\n    (child.parentNode as Node).insertBefore(node, child);\n};\n\nexport const afterNode = function (node: Node | string, child: Node): void {\n    if (!(node instanceof Node)) node = (child.ownerDocument as Document).createTextNode(`${node}`);\n    (child.parentNode as Node).insertBefore(node, child.nextSibling);\n};\n\nexport const replaceNode = function (node: Node, child: Node): void {\n    (child.parentNode as Node).replaceChild(node, child);\n};\n\nexport const replaceChildren = function (element: Element | Document | DocumentFragment, ...nodes: (Node | string)[]): void {\n    while (element.lastChild) {\n        element.removeChild(element.lastChild);\n    }\n\n    for (const node of nodes) {\n        element.appendChild(\n            typeof node === 'string' ? (element.ownerDocument as Document).createTextNode(node) : node,\n        );\n    }\n};\n\n/**\n * Attr DOM\n */\n\nexport const addAttribute = function (owner: Element, attribute: Attr): Attr {\n    owner.setAttributeNode(attribute);\n    return attribute;\n};\n\nexport const createAttribute = function (owner: Element, name: string, value?: string): Attr {\n    const attribute = owner.ownerDocument.createAttribute(name);\n    attribute.value = value ?? '';\n    owner.setAttributeNode(attribute);\n    return attribute;\n};\n\nexport const removeAttribute = function (node: Attr): Attr {\n    return (node.ownerElement as Element).removeAttributeNode(node);\n};\n\n/**\n * Node methods\n */\n\nexport const isText = function (node: Node | null): boolean {\n    return node?.nodeType === TEXT_NODE;\n};\n\nexport const isAttribute = function (node: Node | null): boolean {\n    return node?.nodeType === ATTRIBUTE_NODE;\n};\n\nexport const isElement = function (node: Node | null): boolean {\n    return node?.nodeType === ELEMENT_NODE;\n};\n\nexport const isComment = function (node: Node | null): boolean {\n    return node?.nodeType === COMMENT_NODE;\n};\n", "import { ReferenceType } from './types';\n\n// if (!('WeakRef' in globalThis)) {\n//     globalThis['WeakRef'] = (function () {\n//         const wm = new WeakMap();\n//         const WeakRef = function (target) {\n//             wm.set(this, target);\n//         };\n//         WeakRef.prototype.deref = function () {\n//             return wm.get(this);\n//         };\n//         return WeakRef as any;\n//     })();\n// }\n\nexport const Reference = function <T>(data: T): ReferenceType<T> {\n    return {\n        data: data instanceof Node ? new WeakRef(data) : data,\n        get: function <T>(): T | undefined {\n            if (this.data instanceof WeakRef) {\n                return this.data.deref();\n            } else {\n                return this.data;\n            }\n        },\n        set: function <T>(data: T): T | undefined {\n            if (data instanceof Node) {\n                this.data = new WeakRef(data);\n                return data;\n            } else {\n                this.data = data;\n                return data;\n            }\n        },\n    };\n};\n", "import { hasOn, isBool, isLink, isValue, sliceOn } from './tools';\nimport { Binder } from './types';\n\nexport const attributeName = function (element: Element, binder: Binder, source: any, target: any): void {\n    source = source?.toLowerCase() ?? '';\n    target = target?.toLowerCase() ?? '';\n\n    // console.log('binder:', binder, 'source:', source, 'target:', target);\n\n    if (source === target) {\n        return;\n    }\n\n    if (hasOn(source)) {\n        if (typeof binder.value === 'function') {\n            element.removeEventListener(sliceOn(source), binder.value, true);\n        }\n    } else if (isValue(source)) {\n        element.removeAttribute(source);\n        Reflect.set(element, source, null);\n    } else if (isBool(source)) {\n        element.removeAttribute(source);\n        Reflect.set(element, source, false);\n    } else if (isLink(source)) {\n        element.removeAttribute(source);\n        Reflect.deleteProperty(element, source);\n    } else if (source) {\n        element.removeAttribute(source);\n        Reflect.deleteProperty(element, source);\n    }\n\n    if (hasOn(target)) {\n        return;\n    } else if (isBool(target)) {\n        binder.value = '';\n        element.setAttribute(target, '');\n        Reflect.set(element, target, true);\n    } else if (target) {\n        element.setAttribute(target, '');\n        Reflect.set(element, target, null);\n    }\n\n    binder.name = target || '';\n};\n", "export const display = function (data: any): string {\n    switch (`${data}`) {\n        case 'NaN':\n            return '';\n        case 'null':\n            return '';\n        case 'undefined':\n            return '';\n    }\n\n    switch (typeof data) {\n        case 'string':\n            return data;\n        case 'number':\n            return `${data}`;\n        case 'bigint':\n            return `${data}`;\n        case 'boolean':\n            return `${data}`;\n        case 'symbol':\n            return String(data);\n        case 'object':\n            return JSON.stringify(data);\n    }\n\n    throw new Error('XElement - display type not handled');\n};\n", "import { BindersCache } from './global';\nimport { action } from './action';\n\nlet Next: Promise<void> | undefined;\nlet Current: Promise<void> | undefined;\n\nexport const next = async function (): Promise<void> {\n    // console.log('next');\n    await Current;\n    await new Promise((resolve) => {\n        queueMicrotask(async () => {\n            Next = undefined;\n            await update();\n            resolve(undefined);\n        });\n    });\n};\n\nexport const update = async function (): Promise<void> {\n    // console.log('update');\n    if (Current) {\n        if (Next) {\n            await Next;\n        } else {\n            Next = next();\n            await Next;\n        }\n    } else {\n        Current = new Promise((resolve) => {\n            queueMicrotask(async () => {\n                const binders = BindersCache.values();\n\n                for (const binder of binders) {\n                    try {\n                        await action(binder);\n                    } catch (error) {\n                        console.error(error);\n                    }\n                }\n\n                Current = undefined;\n\n                resolve();\n            });\n        });\n\n        await Current;\n    }\n};\n\n// const stack: Binder[] = [];\n// export const update = async function (binders?: Binder[]): Promise<void> {\n//     if (binders && binders.length) {\n//         stack.push(...binders);\n//     }\n\n//     if (Current) {\n//         await Current;\n//     } else {\n//         Current = new Promise((resolve) => {\n//             queueMicrotask(async () => {\n//                 let binder: Binder | undefined = stack?.shift();\n\n//                 while (binder) {\n//                     try {\n//                         await action(binder);\n//                     } catch (error) {\n//                         console.error(error);\n//                     }\n\n//                     binder = stack?.shift();\n//                 }\n\n//                 Current = undefined;\n\n//                 resolve();\n//             });\n//         });\n\n//         await Current;\n//     }\n// };\n", "import { Binder } from './types';\n// import { update } from './update';\n\nexport const event = function (binder: Binder) {\n    return {\n        get target() {\n            return binder?.node;\n        },\n        // update,\n        query(selector: string): Element | null {\n            return (binder?.node?.getRootNode() as Element)?.querySelector(selector);\n        },\n    };\n};\n", "import { dangerousLink, hasOn, isBool, isLink, isOnce, isValue, sliceOn } from './tools';\nimport { display } from './display';\nimport { update } from './update';\nimport { Binder } from './types';\nimport { event } from './event';\nimport { isTimeout } from './tools';\n\nconst isRadioChecked = function (element: Element) {\n    if (element.nodeName === 'INPUT' && (element as HTMLInputElement).type === 'radio') {\n        const radios = element.ownerDocument.querySelectorAll<HTMLInputElement>(`input[name=\"${(element as HTMLInputElement).name}\"]`);\n        for (const radio of radios) {\n            if (radio.checked) {\n                return radio.checked;\n            }\n        }\n    }\n\n    return false;\n};\n\nexport const attributeValue = function (element: Element, binder: Binder, source: any, target: any): void {\n    if (source === target) {\n        return;\n    }\n\n    if (!binder.name) {\n        console.warn('attribute binder name required');\n        return;\n    }\n\n    if (isValue(binder.name)) {\n        if (element.nodeName === 'SELECT') {\n            const options = (element as HTMLSelectElement).options as HTMLOptionsCollection;\n            const array = Array.isArray(target);\n            for (const option of options) {\n                option.selected = array ? target.includes(option.value) : `${target}` === option.value;\n            }\n        } else {\n            binder.value = display(target);\n            element.setAttribute(binder.name, binder.value);\n            Reflect.set(element, binder.name, binder.value);\n        }\n    } else if (isLink(binder.name)) {\n        binder.value = encodeURI(target);\n\n        if (dangerousLink(binder.value)) {\n            element.removeAttribute(binder.name);\n            console.warn(`XElement - attribute name \"${binder.name}\" and value \"${binder.value}\" not allowed`);\n            return;\n        }\n\n        element.setAttribute(binder.name, binder.value);\n        Reflect.set(element, binder.name, binder.value);\n    } else if (isBool(binder.name)) {\n        const bool = !!target;\n\n        if (bool) {\n            element.setAttribute(binder.name, '');\n        } else {\n            element.removeAttribute(binder.name);\n        }\n\n        Reflect.set(element, binder.name, bool);\n    } else if (hasOn(binder.name)) {\n        // handle onanimation ontimeout\n\n        if (element.hasAttribute(binder.name)) {\n            element.removeAttribute(binder.name);\n        }\n\n        if (typeof binder.value === 'function') {\n            element.removeEventListener(\n                sliceOn(binder.name),\n                binder.value,\n                source?.[1] ?? true,\n            );\n        }\n\n        const method = typeof target === 'function' ? target : target?.[0];\n\n        if (typeof method !== 'function') {\n            return console.warn(`XElement - attribute name \"${binder.name}\" expected a function`);\n        }\n\n        let oldResult: any;\n        binder.value = function () {\n            if (element.nodeName === 'INPUT' && (element as HTMLInputElement).type === 'radio') {\n                const radios = element.ownerDocument.querySelectorAll<HTMLInputElement>(`input[name=\"${(element as HTMLInputElement).name}\"]`);\n                for (const radio of radios) {\n                    if (radio.checked) {\n                        oldResult = radio.checked;\n                    }\n                }\n            }\n\n            const newResult = method.call(this, event(binder));\n\n            if (newResult !== oldResult) {\n                oldResult = newResult;\n                update();\n            }\n\n            return newResult;\n        };\n\n        if (isOnce(binder.name)) {\n            binder.value();\n        } else if (isTimeout(binder.name)) {\n            setTimeout(binder.value, target?.[1]);\n        } else {\n            element.addEventListener(sliceOn(binder.name), binder.value, target?.[1] ?? true);\n        }\n    } else {\n        binder.value = target;\n        element.setAttribute(binder.name, binder.value);\n        Reflect.set(element, binder.name, binder.value);\n    }\n};\n\n// const attribute = function (node: Attr, binder: Binder, source: any, target: any) {\n//     const name = node.name;\n//     const value = node.value;\n\n//     if (hasOn(name)) {\n\n//         if (isAnimation(name)) {\n//             // const variable = binder.result;\n//             const isArray = Array.isArray(binder.result);\n//             const method = isArray ? binder.result[ 0 ] : binder.result;\n//             const handle = async () => {\n//                 if (binder.owner?.isConnected) {\n//                     const result = method();\n//                     if (binder.result === result) {\n//                         requestAnimationFrame(handle);\n//                     } else {\n//                         binder.result = result;\n//                         await update();\n//                         requestAnimationFrame(handle);\n//                     }\n//                 } else {\n//                     requestAnimationFrame(handle);\n//                 }\n//             };\n//             requestAnimationFrame(handle);\n//         } else if (isTimeout(name)) {\n//             // const variable = binder.variable;\n//             // const isArray = Array.isArray(variable);\n//             // const method = isArray ? variable[ 0 ] : variable;\n//             // const time = isArray ? variable[ 1 ] : undefined;\n\n//             const isArray = Array.isArray(binder.result);\n//             const method = isArray ? binder.result[ 0 ] : binder.result;\n//             const time = isArray ? binder.result[ 1 ] : undefined;\n//             const handle = async () => {\n//                 const result = method();\n//                 if (binder.result === result) {\n//                     return;\n//                 } else {\n//                     binder.result = result;\n//                     await update();\n//                 }\n//             };\n//             setTimeout(handle, time);\n//         } else {\n//             const owner = binder.owner;\n//             if (owner) {\n//                 const eventName = name.substring(2);\n//                 const isArray = Array.isArray(result);\n//                 const [ method, options ] = isArray ? result : [ result, undefined ];\n//                 if (typeof method === 'function') {\n//                     // owner.removeEventListener(eventName, result);\n//                     owner.addEventListener(eventName, async function (event) {\n//                         const returned = method(event);\n//                         if (binder.meta.returned !== returned) {\n//                             binder.meta.returned = returned;\n//                             await update();\n//                         }\n//                     }, options);\n//                     intersectionObserver.observe(owner);\n//                 } else {\n//                     console.error(`${name} requiures function or array with function`);\n//                 }\n//             }\n//         }\n\n//         const owner = binder.owner;\n//         if (owner) {\n//             owner.removeAttributeNode(node);\n//         }\n\n//     // } else if (isMarker(name)) {\n//     } else if (value === '') {\n//         if (name === result) {\n//             if (!binder.owner?.hasAttribute(result)) {\n//                 addAttribute(binder.owner as Element, node);\n//                 Reflect.set(binder.owner as Element, result, true);\n//             }\n//         } else {\n//             if (result) {\n//                 removeAttribute(node);\n//                 binder.replace(createAttribute(binder.owner as Element, result));\n//                 Reflect.set(binder.owner as Element, result, true);\n//             } else {\n//                 removeAttribute(node);\n//                 Reflect.set(binder.owner as Element, result, false);\n//             }\n//         }\n//     } else if (result instanceof Attr) {\n\n//     } else {\n//         node.value = result;\n//     }\n// };\n", "import { afterNode, beforeNode, isIterable, removeBetween, removeNode, replaceNode } from './tools';\nimport { MarkSymbol, ViewSymbol } from './global';\nimport { display } from './display';\nimport { Binder } from './types';\n\nconst iterableDisplay = function (data: any): Node | string {\n    return data?.[ViewSymbol] ? data() : data instanceof Node ? data : display(data);\n};\n\nexport const text = function (node: Text, binder: Binder, source: any, target: any): void {\n    if (target === null || target === undefined) {\n        if (node.textContent !== '') {\n            node.textContent = '';\n        }\n    } else if (target?.[ViewSymbol]) {\n        if (!binder.start) {\n            binder.start = document.createTextNode('');\n            beforeNode(binder.start, node);\n        }\n\n        if (!binder.end) {\n            node.textContent = '';\n            binder.end = node;\n        }\n\n        removeBetween(binder.start, binder.end);\n        beforeNode(target(), binder.end);\n    } else if (target instanceof DocumentFragment) {\n        if (!binder.start) {\n            binder.start = document.createTextNode('');\n            beforeNode(binder.start, node);\n        }\n\n        if (!binder.end) {\n            node.textContent = '';\n            binder.end = node;\n        }\n\n        removeBetween(binder.start, binder.end);\n        beforeNode(target, binder.end);\n    } else if (isIterable(target)) {\n        // console.log(target);\n\n        if (binder.length === undefined) {\n            binder.length = 0;\n        }\n\n        if (!binder.results) {\n            binder.results = [];\n        }\n\n        if (!binder.markers) {\n            binder.markers = [];\n        }\n\n        if (!binder.start) {\n            binder.start = document.createTextNode('');\n            beforeNode(binder.start, node);\n        }\n\n        if (!binder.end) {\n            node.textContent = '';\n            binder.end = node;\n        }\n\n        const oldLength = binder.length;\n        const newLength = target.length;\n        const commonLength = Math.min(oldLength, newLength);\n\n        // todo: make this more efficient\n        for (let index = 0; index < commonLength; index++) {\n            if (\n                target[index] === binder.results[index] ||\n                target[index]?.[ViewSymbol] && binder.results[index]?.[ViewSymbol] && target[index]?.[MarkSymbol] === binder.results[index]?.[MarkSymbol]\n            ) continue;\n\n            const marker = binder.markers[index];\n            const last = binder.markers[index + 1] ?? binder.end;\n            while (last.previousSibling && last.previousSibling !== marker) {\n                removeNode(last.previousSibling);\n            }\n\n            const child = iterableDisplay(target[index]);\n            afterNode(child, marker);\n            console.log(binder.results[index], target[index], child, marker);\n\n            binder.results[index] = target[index];\n        }\n\n        if (oldLength < newLength) {\n            while (binder.length !== target.length) {\n                const marker = document.createTextNode('');\n                const child = iterableDisplay(target[binder.length]);\n\n                binder.markers.push(marker);\n                binder.results.push(target[binder.length]);\n\n                beforeNode(marker, binder.end);\n                beforeNode(child, binder.end);\n                binder.length++;\n            }\n        } else if (oldLength > newLength) {\n            // const last = binder.markers[ target.length - 1 ];\n\n            // while (binder.length !== target.length) {\n            //     const previous = binder.end.previousSibling;\n            //     if (previous === last) break;\n            //     removeNode(previous as Node);\n            // }\n\n            const marker = binder.markers[target.length - 1];\n            const last = binder.end;\n            while (last.previousSibling && last.previousSibling !== marker) {\n                removeNode(last.previousSibling);\n            }\n\n            binder.length = target.length;\n            binder.results.length = target.length;\n            binder.markers.length = target.length;\n        }\n    } else if (target instanceof Node) {\n        replaceNode(target, node);\n    } else {\n        if (node.textContent === `${target}`) {\n            return;\n        } else {\n            node.textContent = `${target}`;\n        }\n    }\n};\n", "import { attributeName } from './attribute-name';\nimport { attributeValue } from './attribute-value';\nimport { hasOn, isConnected } from './tools';\nimport { ViewSymbol } from './global';\nimport { Binder } from './types';\nimport { event } from './event';\nimport { text } from './text';\nimport { MarkSymbol } from './global';\n\n/**\n * @module Action\n * @todo need to handle element name changes\n * @todo need to handle attribute name changes\n * @todo\n */\n\nconst comment = function (node: Comment, data: any, source: any, target: any): void {\n    console.warn('comment action not implemented');\n};\n\nconst element = function (node: Element, data: any, source: any, target: any): void {\n    console.warn('element action not implemented');\n};\n\nexport const action = function (binder: Binder) {\n    const node = binder.node;\n\n    if (!node) {\n        return;\n    }\n\n    // this optimization could prevent disconnected nodes from being render when re/connected\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node/isConnected\n    if (!isConnected(node) && binder.isInitialized) {\n        return;\n    }\n\n    const variable = binder.variable;\n    const isFunction = typeof variable === 'function';\n    const isInstance = isFunction && (variable as any)[ViewSymbol];\n    const isOnce = binder.type === 3 && hasOn(binder.name);\n    const isReactive = !isInstance && !isOnce && isFunction;\n\n    if (isOnce || isInstance || !isFunction) {\n        binder.remove();\n    }\n\n    const target = isReactive ? variable(event(binder)) : isInstance ? variable() : variable;\n\n    const source = binder.source;\n    if (\n        'source' in binder &&\n        (\n            source === target ||\n            source?.[ViewSymbol] && target?.[ViewSymbol] && source?.[MarkSymbol] === target?.[MarkSymbol]\n        )\n    ) {\n        return;\n    }\n\n    if (binder.type === 1) {\n        element(node as Element, binder, source, target);\n    } else if (binder.type === 2) {\n        attributeName(node as Element, binder, source, target);\n    } else if (binder.type === 3) {\n        attributeValue(node as Element, binder, source, target);\n    } else if (binder.type === 4) {\n        text(node as Text, binder, source, target);\n    } else {\n        throw new Error('instruction type not valid');\n    }\n\n    binder.source = target;\n    binder.isInitialized = true;\n};\n", "import { Binder, BinderType, ReferenceType, Variables } from './types';\nimport { BindersCache } from './global';\n// import { update } from './update';\n// import { action } from './action';\n\n// const ro = new ResizeObserver(function (entries) {\n//     console.log(arguments);\n//     // for (const entry of entries) {\n//     //     const { target } = entry;\n//     //     if (target.isConnected) {\n//     //         const childBinder = Bound.get(target);\n//     //         const parentBinder = Bound.get(target.parentElement);\n//     //         console.log(childBinder, parentBinder, childBinder.value, parentBinder.value);\n//     //         if (childBinder && parentBinder && childBinder.value === parentBinder.value) {\n//     //             target.selected = true;\n//     //         }\n//     //         ro.unobserve(target);\n//     //     }\n//     // }\n// });\n\n// const observed: WeakMap<Element, Array<Binder>> = new WeakMap();\n// const io = new IntersectionObserver(async (entries) => {\n//     for (const entry of entries) {\n//         const { target } = entry;\n//         // if (target.isConnected) {\n//         // } else {\n//         //     console.log(target.isConnected, target);\n//         // }\n//         const binders = observed.get(target) as Binder[];\n\n//         for (const binder of binders) {\n//             try {\n//                 await action(binder);\n//             } catch (error) {\n//                 console.error(error);\n//             }\n//         }\n\n//     }\n// }, {\n//     threshold: 1,\n//     // rootMargin: '100000%',\n//     root: document.documentElement,\n// });\n\nexport const bind = function (\n    type: BinderType,\n    index: number,\n    variables: Variables,\n    referenceNode: ReferenceType<Node>,\n    referenceName?: ReferenceType<any>,\n    referenceValue?: ReferenceType<any>,\n) {\n    const binder: Binder = {\n        type,\n\n        // index,\n        // variables,\n        isInitialized: false,\n\n        get variable() {\n            return variables[index];\n        },\n\n        set variable(data: any) {\n            variables[index] = data;\n        },\n\n        get node() {\n            const node = referenceNode.get();\n            if (node) {\n                return node;\n            } else {\n                BindersCache.delete(this);\n                return undefined;\n            }\n        },\n\n        get name() {\n            return (referenceName as ReferenceType<any>).get();\n        },\n\n        set name(name: string) {\n            (referenceName as ReferenceType<any>).set(name);\n        },\n\n        get value() {\n            return (referenceValue as ReferenceType<any>).get();\n        },\n\n        set value(value: string) {\n            (referenceValue as ReferenceType<any>).set(value);\n        },\n\n        remove() {\n            BindersCache.delete(this);\n        },\n\n        add() {\n            BindersCache.add(this);\n        },\n    };\n\n    // const node = binder.node;\n    // const parent = node?.parentElement;\n\n    // if (node instanceof Element) {\n    //     const binders = observed.get(node);\n    //     if (binders) {\n    //         binders.push(binder);\n    //     } else {\n    //         io.observe(node);\n    //         observed.set(node, [binder]);\n    //     }\n    // } else if (parent instanceof Element) {\n    //     if (!document.contains(parent)) {\n    //         console.log(parent);\n    //     }\n\n    //     const binders = observed.get(parent);\n    //     if (binders) {\n    //         binders.push(binder);\n    //     } else {\n    //         io.observe(parent);\n    //         observed.set(parent, [binder]);\n    //     }\n    // } else {\n    //     // binder.add();\n    //     console.warn('top level reactive text bindings');\n    // }\n\n    binder.add();\n\n    return binder;\n};\n", "import { dangerousLink, ELEMENT_NODE, hasMarker, hasOn, isLink, matchMarker, replaceChildren, SHOW_ELEMENT, SHOW_TEXT, TEXT_NODE } from './tools';\nimport { Binder, Container, Marker, ReferenceType, Template, Variables } from './types';\nimport { ContainersCache } from './global';\nimport { Reference } from './reference';\nimport { action } from './action';\n// import { update } from './update';\nimport { bind } from './bind';\n\nconst FILTER = SHOW_ELEMENT + SHOW_TEXT;\n\nexport const initialize = function (\n    template: Template,\n    variables: Variables,\n    marker: Marker,\n    container?: Container,\n): Element | ShadowRoot | DocumentFragment {\n    if (typeof container === 'string') {\n        const selection = document.querySelector(container);\n        if (!selection) throw new Error('query not found');\n        const cache = ContainersCache.get(selection);\n        if (cache && cache === template) {\n            // update();\n            return selection;\n        } else {\n            ContainersCache.set(selection, template);\n        }\n    } else if (container instanceof Element || container instanceof ShadowRoot) {\n        const cache = ContainersCache.get(container);\n        if (cache && cache === template) {\n            // update();\n            return container;\n        } else {\n            ContainersCache.set(container, template);\n        }\n    }\n\n    const binders: Binder[] = [];\n    const fragment = template.content.cloneNode(true) as DocumentFragment;\n    const walker = document.createTreeWalker(fragment, FILTER, null);\n\n    let node: Node | null;\n    let index = 0;\n\n    while (walker.nextNode()) {\n        node = walker.currentNode;\n        const type = node.nodeType;\n\n        if (type === TEXT_NODE) {\n            let text = node as Text;\n\n            const startIndex = text.nodeValue?.indexOf(marker) ?? -1;\n            if (startIndex === -1) continue;\n\n            if (startIndex !== 0) {\n                text.splitText(startIndex);\n                node = walker.nextNode() as Node | null;\n                text = node as Text;\n            }\n\n            const endIndex = marker.length;\n            if (endIndex !== text.nodeValue?.length) {\n                text.splitText(endIndex);\n            }\n\n            const referenceNode = Reference<Node>(text);\n            const binder = bind(4, index++, variables, referenceNode);\n            binders.unshift(binder);\n            // action(binder);\n        } else if (type === ELEMENT_NODE) {\n            const element = node as Element;\n            const tag = element.tagName;\n\n            if (tag === 'STYLE' || tag === 'SCRIPT') {\n                walker.nextSibling();\n            }\n\n            let referenceNode: ReferenceType<Node> | undefined;\n\n            if (matchMarker(tag, marker)) {\n                referenceNode = Reference(node);\n                const binder = bind(1, index++, variables, referenceNode);\n                binders.unshift(binder);\n                // action(binder);\n            }\n\n            const names = element.getAttributeNames();\n            for (const name of names) {\n                const value = element.getAttribute(name) ?? '';\n                const matchMarkerName = matchMarker(name, marker);\n                const hasMarkerValue = hasMarker(value, marker);\n\n                if (matchMarkerName || hasMarkerValue) {\n                    referenceNode = referenceNode ?? Reference(node);\n\n                    if (matchMarkerName && hasMarkerValue) {\n                        const referenceName = Reference<string>('');\n                        const referenceValue = Reference<string>('');\n                        const binderName = bind(2, index++, variables, referenceNode, referenceName, referenceValue);\n                        const binderValue = bind(3, index++, variables, referenceNode, referenceName, referenceValue);\n                        element.removeAttribute(name);\n                        binders.unshift(binderName);\n                        binders.unshift(binderValue);\n                        // action(binderName);\n                        // action(binderValue);\n                    } else if (matchMarkerName) {\n                        const referenceName = Reference<string>('');\n                        const referenceValue = Reference<string>(value);\n                        const binder = bind(2, index++, variables, referenceNode, referenceName, referenceValue);\n                        element.removeAttribute(name);\n                        binders.unshift(binder);\n                        // action(binder);\n                    } else if (hasMarkerValue) {\n                        const referenceName = Reference<string>(name);\n                        const referenceValue = Reference<string>('');\n                        const binder = bind(3, index++, variables, referenceNode, referenceName, referenceValue);\n                        element.removeAttribute(name);\n                        binders.unshift(binder);\n                        // action(binder);\n                    }\n                } else {\n                    if (isLink(name)) {\n                        if (dangerousLink(value)) {\n                            element.removeAttribute(name);\n                            console.warn(`attribute name \"${name}\" and value \"${value}\" not allowed`);\n                        }\n                    } else if (hasOn(name)) {\n                        element.removeAttribute(name);\n                        console.warn(`attribute name \"${name}\" not allowed`);\n                    }\n                }\n            }\n        } else {\n            console.warn(`walker node type \"${type}\" not handled`);\n        }\n    }\n\n    for (const binder of binders) {\n        action(binder);\n    }\n\n    if (typeof container === 'string') {\n        const selection = document.querySelector(container);\n        if (!selection) throw new Error('query not found');\n        replaceChildren(selection, fragment);\n        return selection;\n    } else if (container instanceof Element || container instanceof ShadowRoot) {\n        replaceChildren(container, fragment);\n        return container;\n    } else {\n        return fragment;\n    }\n};\n", "export const dash = function (data: string): string {\n    data = data.replace(/([a-zA-Z])([A-Z])/g, '$1-$2');\n    data = data.toLowerCase();\n    data = data.includes('-') ? data : `x-${data}`;\n    return data;\n};\n", "import { dash } from './dash';\n\n// export const define = function (tag: string, extend?: string) {\n//     return (constructor: CustomElementConstructor, context: ClassDecoratorContext) => {\n//         context.addInitializer(function () {\n//             const $tag = dash(tag);\n//             const $extend = extend;\n//             customElements.define($tag, constructor, { extends: $extend });\n//         });\n//     };\n// };\n\nexport const define = function (tag: string, extend?: string) {\n    return function (constructor: CustomElementConstructor) {\n        const $tag = dash(tag);\n        const $extend = extend;\n        customElements.define($tag, constructor, { extends: $extend });\n    };\n};\n", "const Sheets: WeakMap<CSSStyleSheet, CSSStyleSheet> = new WeakMap();\n\nexport const style = function (instance: HTMLElement) {\n    if (instance.shadowRoot) {\n        const root = document.getRootNode() as Document;\n\n        instance.shadowRoot.adoptedStyleSheets.push(...root.adoptedStyleSheets);\n\n        for (const rootSheet of root.styleSheets) {\n            let cacheSheet: CSSStyleSheet | undefined = Sheets.get(rootSheet);\n\n            if (!cacheSheet) {\n                cacheSheet = new CSSStyleSheet();\n\n                const { cssRules } = rootSheet;\n                for (const { cssText } of cssRules) {\n                    cacheSheet.insertRule(cssText);\n                }\n\n                Sheets.set(rootSheet, cacheSheet);\n            }\n\n            instance.shadowRoot.adoptedStyleSheets.push(cacheSheet);\n        }\n    }\n};\n\n// export const style = function () {\n//     return function (construct: CustomElementConstructor): typeof construct {\n//         return class extends construct {\n//             constructor(...args: any[]) {\n//                 super(...args);\n//                 if (this.shadowRoot) {\n//                     const root = document.getRootNode() as Document;\n//                     this.shadowRoot.adoptedStyleSheets = [...root.styleSheets];\n//                 }\n//             }\n//         };\n//     };\n// };\n", "import { MarkSymbol, TemplatesCache, TemplateSymbol, VariablesSymbol, ViewSymbol } from './global';\nimport { Initialize, Variables } from './types';\nimport { initialize } from './initialize';\nimport { update } from './update';\nimport { define } from './define';\nimport { mark } from './tools';\n\nimport { style } from './style';\n\n// const query = (node: Node, selector: Selector) => selector.reduce((n, s) => n[ s ], node);\n\nexport { define, style, update };\n\n// const connectedEvent = new CustomEvent('connected');\n// const disconnectedEvent = new CustomEvent('disconnected');\n// const intersectionElements: WeakMap<Element, { wasConnected: boolean; isIntersecting: boolean }> = new WeakMap();\n// const intersectionObserver = new IntersectionObserver((entries) => {\n//     for (const entry of entries) {\n//         const intersectionElement = intersectionElements.get(entry.target);\n//         if (!intersectionElement) {\n//             intersectionElements.set(entry.target, { wasConnected: false, isIntersecting: entry.isIntersecting });\n//         } else if (entry.target.isConnected === true && intersectionElement.wasConnected === false) {\n//             intersectionElement.wasConnected = true;\n//             intersectionElement.isIntersecting = entry.isIntersecting;\n//             entry.target.dispatchEvent(connectedEvent);\n//         } else if (entry.target.isConnected === false && intersectionElement.wasConnected === true) {\n//             intersectionElement.wasConnected = false;\n//             intersectionElement.isIntersecting = entry.isIntersecting;\n//             entry.target.dispatchEvent(disconnectedEvent);\n//         } else {\n//             //\n//         }\n//     }\n// }, {\n//     threshold: 1,\n//     // rootMargin: '100000%',\n//     root: document.documentElement,\n// });\n\n// const ro = new ResizeObserver((entries) => {\n//     for (const entry of entries) {\n//         const { target } = entry;\n//         if (target.isConnected) {\n//             // console.log(entry);\n//             console.log(target.isConnected, target.parentElement.value, target.value);\n//             if (target?.parentElement?.value === target.value) {\n//                 target.selected = true;\n//             }\n//             ro.unobserve(target);\n//         }\n//     }\n// });\n\n// const io = new IntersectionObserver((entries) => {\n//     for (const entry of entries) {\n//         const { target } = entry;\n//         if (target.isConnected) {\n//             console.log(target.isConnected, target);\n//             // console.log(entry);\n//             // if (target?.parentElement?.value === target.value) {\n//             //     target.selected = true;\n//             // }\n//             // io.unobserve(target);\n//         }\n//     }\n// }, {\n//     threshold: 1,\n//     // rootMargin: '100000%',\n//     root: document.documentElement,\n// });\n\n// const observer = new MutationObserver(function (records) {\n//     console.log(arguments);\n// });\n// observer.observe(document.body, { childList: true, subtree: true });\n\n/**\n * @description\n * @param strings\n * @param variables\n * @returns {DocumentFragment}\n */\n\nexport const html = function (strings: TemplateStringsArray, ...variables: Variables): Initialize {\n    let marker: string;\n    let template: HTMLTemplateElement;\n\n    const cache = TemplatesCache.get(strings);\n\n    if (cache) {\n        marker = cache.marker;\n        template = cache.template;\n    } else {\n        marker = mark();\n\n        let innerHTML = '';\n\n        const length = strings.length - 1;\n        for (let index = 0; index < length; index++) {\n            innerHTML += `${strings[index]}${marker}`;\n        }\n\n        innerHTML += strings[length];\n\n        template = document.createElement('template');\n        template.innerHTML = innerHTML;\n\n        TemplatesCache.set(strings, { template, marker });\n    }\n\n    const meta = {\n        [ViewSymbol]: true,\n        [MarkSymbol]: marker,\n        [TemplateSymbol]: template,\n        [VariablesSymbol]: variables,\n    };\n\n    return Object.assign(initialize.bind(meta, template, variables, marker), meta);\n};\n"],
  "mappings": ";;;;;;;;;;;;;;AAEO,IAAM,SAAkB,WAAmB,YAAa,WAAmB,UAAU,OAAO,OAAO;AAAA;AAAA;AAAA,EAItG,OAAO,oBAAI,QAAQ;AAAA,EACnB,cAAc,oBAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAQtB,gBAAgB,oBAAI,QAAQ;AAAA,EAC5B,iBAAiB,oBAAI,QAAQ;AAAA,EAE7B,YAAY,OAAO,MAAM;AAAA,EACzB,YAAY,OAAO,MAAM;AAAA,EAEzB,gBAAgB,OAAO,UAAU;AAAA,EACjC,iBAAiB,OAAO,WAAW;AACvC,CAAC;AAEM,IAAM;AAAA;AAAA;AAAA,EAIT;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,IAAI;;;ACzCG,IAAM,YAAY;AAKlB,IAAM,eAAe;AAKrB,IAAM,YAAY;AAUlB,IAAM,eAAe;AAc5B,IAAM,cAAc,IAAI;AAAA,EACpB;AAAA,IACI;AAAA,IACA;AAAA,MACI;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,EAAE,KAAK,GAAG;AAAA,IACV;AAAA,EACJ,EAAE,KAAK,EAAE;AAAA,EACT;AACJ;AAGA,IAAM,cAAc,IAAI;AAAA,EACpB;AAAA,IACI;AAAA,IACA;AAAA,MACI;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,EAAE,KAAK,GAAG;AAAA,IACV;AAAA,EACJ,EAAE,KAAK,EAAE;AAAA,EACT;AACJ;AAGA,IAAM,iBAAiB;AACvB,IAAM,cAAc;AACpB,IAAM,eAAe;AACrB,IAAM,YAAY;AAGlB,IAAM,cAAc;AAEb,IAAM,SAAS,SAAU,MAAuB;AACnD,SAAO,QAAQ,OAAO,SAAS,WAAW,YAAY,KAAK,IAAI,IAAI;AACvE;AAEO,IAAM,SAAS,SAAU,MAAuB;AACnD,SAAO,QAAQ,OAAO,SAAS,WAAW,YAAY,KAAK,IAAI,IAAI;AACvE;AAEO,IAAM,aAAa,SAAU,MAAoB;AACpD,SAAO,QAAQ,OAAO,SAAS,YAAY,OAAO,KAAK,OAAO,QAAQ,MAAM;AAChF;AAMO,IAAM,SAAS,SAAU,MAAuB;AACnD,SAAO,QAAQ,OAAO,SAAS,WAAW,YAAY,KAAK,IAAI,IAAI;AACvE;AAEO,IAAM,YAAY,SAAU,MAAuB;AACtD,SAAO,QAAQ,OAAO,SAAS,WAAW,eAAe,KAAK,IAAI,IAAI;AAC1E;AAEO,IAAM,UAAU,SAAU,MAAuB;AACpD,SAAO,QAAQ,OAAO,SAAS,WAAW,aAAa,KAAK,IAAI,IAAI;AACxE;AAEO,IAAM,QAAQ,SAAU,MAAuB;AAClD,SAAO,QAAQ,OAAO,SAAS,WAAW,UAAU,KAAK,IAAI,IAAI;AACrE;AAMO,IAAM,cAAc,SAAU,MAAc,QAAyB;AACxE,SAAO,QAAQ,UACP,OAAO,SAAS,YAChB,OAAO,WAAW,WACpB,KAAK,YAAY,MAAM,OAAO,YAAY,IAC1C;AACV;AAEO,IAAM,YAAY,SAAU,MAAc,QAAyB;AACtE,SAAO,QAAQ,OAAO,SAAS,WAAW,KAAK,QAAQ,MAAM,MAAM,KAAK;AAC5E;AAEO,IAAM,UAAU,SAAU,MAAsB;AACnD,SAAO,QAAQ,OAAO,SAAS,WAAW,KAAK,QAAQ,WAAW,EAAE,IAAI;AAC5E;AAEO,IAAM,cAAc,SAAU,MAAqB;AACtD,MAAI,KAAK,aAAa,KAAK,gBAAgB;AACvC,WAAO,KAAK,YAAY,eAAe;AAAA,EAC3C,OAAO;AACH,WAAO,KAAK;AAAA,EAChB;AAQJ;AAMO,IAAM,OAAO,WAAoB;AACpC,SAAO,KAAK,GAAG,KAAK,MAAM,KAAK,OAAO,IAAI,KAAK,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC;AACxE;AAEO,IAAM,gBAAgB,SAAU,MAAuB;AAC1D,MAAI,SAAS,GAAI,QAAO;AACxB,MAAI,OAAO,SAAS,SAAU,QAAO;AACrC,SAAO,YAAY,KAAK,IAAI,IAAI,QAAQ;AAC5C;AAMO,IAAM,gBAAgB,SAAU,OAAa,KAAW;AAC3D,MAAI,OAAO,IAAI;AACf,SAAO,QAAQ,SAAS,OAAO;AAC3B,SAAK,YAAY,YAAY,IAAI;AACjC,WAAO,IAAI;AAAA,EACf;AACJ;AAEO,IAAM,aAAa,SAAU,MAAkB;AAClD,EAAC,KAAK,WAAoB,YAAY,IAAI;AAC9C;AAEO,IAAM,aAAa,SAAU,MAAqB,OAAmB;AACxE,MAAI,EAAE,gBAAgB,MAAO,QAAQ,MAAM,cAA2B,eAAe,GAAG,IAAI,EAAE;AAC9F,EAAC,MAAM,WAAoB,aAAa,MAAM,KAAK;AACvD;AAEO,IAAM,YAAY,SAAU,MAAqB,OAAmB;AACvE,MAAI,EAAE,gBAAgB,MAAO,QAAQ,MAAM,cAA2B,eAAe,GAAG,IAAI,EAAE;AAC9F,EAAC,MAAM,WAAoB,aAAa,MAAM,MAAM,WAAW;AACnE;AAEO,IAAM,cAAc,SAAU,MAAY,OAAmB;AAChE,EAAC,MAAM,WAAoB,aAAa,MAAM,KAAK;AACvD;AAEO,IAAM,kBAAkB,SAAUA,aAAmD,OAAgC;AACxH,SAAOA,SAAQ,WAAW;AACtB,IAAAA,SAAQ,YAAYA,SAAQ,SAAS;AAAA,EACzC;AAEA,aAAW,QAAQ,OAAO;AACtB,IAAAA,SAAQ;AAAA,MACJ,OAAO,SAAS,WAAYA,SAAQ,cAA2B,eAAe,IAAI,IAAI;AAAA,IAC1F;AAAA,EACJ;AACJ;;;ACzNO,IAAM,YAAY,SAAa,MAA2B;AAC7D,SAAO;AAAA,IACH,MAAM,gBAAgB,OAAO,IAAI,QAAQ,IAAI,IAAI;AAAA,IACjD,KAAK,WAA8B;AAC/B,UAAI,KAAK,gBAAgB,SAAS;AAC9B,eAAO,KAAK,KAAK,MAAM;AAAA,MAC3B,OAAO;AACH,eAAO,KAAK;AAAA,MAChB;AAAA,IACJ;AAAA,IACA,KAAK,SAAaC,OAAwB;AACtC,UAAIA,iBAAgB,MAAM;AACtB,aAAK,OAAO,IAAI,QAAQA,KAAI;AAC5B,eAAOA;AAAA,MACX,OAAO;AACH,aAAK,OAAOA;AACZ,eAAOA;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACJ;;;AChCO,IAAM,gBAAgB,SAAUC,UAAkB,QAAgB,QAAa,QAAmB;AACrG,WAAS,QAAQ,YAAY,KAAK;AAClC,WAAS,QAAQ,YAAY,KAAK;AAIlC,MAAI,WAAW,QAAQ;AACnB;AAAA,EACJ;AAEA,MAAI,MAAM,MAAM,GAAG;AACf,QAAI,OAAO,OAAO,UAAU,YAAY;AACpC,MAAAA,SAAQ,oBAAoB,QAAQ,MAAM,GAAG,OAAO,OAAO,IAAI;AAAA,IACnE;AAAA,EACJ,WAAW,QAAQ,MAAM,GAAG;AACxB,IAAAA,SAAQ,gBAAgB,MAAM;AAC9B,YAAQ,IAAIA,UAAS,QAAQ,IAAI;AAAA,EACrC,WAAW,OAAO,MAAM,GAAG;AACvB,IAAAA,SAAQ,gBAAgB,MAAM;AAC9B,YAAQ,IAAIA,UAAS,QAAQ,KAAK;AAAA,EACtC,WAAW,OAAO,MAAM,GAAG;AACvB,IAAAA,SAAQ,gBAAgB,MAAM;AAC9B,YAAQ,eAAeA,UAAS,MAAM;AAAA,EAC1C,WAAW,QAAQ;AACf,IAAAA,SAAQ,gBAAgB,MAAM;AAC9B,YAAQ,eAAeA,UAAS,MAAM;AAAA,EAC1C;AAEA,MAAI,MAAM,MAAM,GAAG;AACf;AAAA,EACJ,WAAW,OAAO,MAAM,GAAG;AACvB,WAAO,QAAQ;AACf,IAAAA,SAAQ,aAAa,QAAQ,EAAE;AAC/B,YAAQ,IAAIA,UAAS,QAAQ,IAAI;AAAA,EACrC,WAAW,QAAQ;AACf,IAAAA,SAAQ,aAAa,QAAQ,EAAE;AAC/B,YAAQ,IAAIA,UAAS,QAAQ,IAAI;AAAA,EACrC;AAEA,SAAO,OAAO,UAAU;AAC5B;;;AC3CO,IAAM,UAAU,SAAU,MAAmB;AAChD,UAAQ,GAAG,IAAI,IAAI;AAAA,IACf,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,EACf;AAEA,UAAQ,OAAO,MAAM;AAAA,IACjB,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO,GAAG,IAAI;AAAA,IAClB,KAAK;AACD,aAAO,GAAG,IAAI;AAAA,IAClB,KAAK;AACD,aAAO,GAAG,IAAI;AAAA,IAClB,KAAK;AACD,aAAO,OAAO,IAAI;AAAA,IACtB,KAAK;AACD,aAAO,KAAK,UAAU,IAAI;AAAA,EAClC;AAEA,QAAM,IAAI,MAAM,qCAAqC;AACzD;;;ACvBA,IAAI;AACJ,IAAI;AAEG,IAAM,OAAO,iBAAiC;AAEjD,QAAM;AACN,QAAM,IAAI,QAAQ,CAAC,YAAY;AAC3B,mBAAe,YAAY;AACvB,aAAO;AACP,YAAM,OAAO;AACb,cAAQ,MAAS;AAAA,IACrB,CAAC;AAAA,EACL,CAAC;AACL;AAEO,IAAM,SAAS,iBAAiC;AAEnD,MAAI,SAAS;AACT,QAAI,MAAM;AACN,YAAM;AAAA,IACV,OAAO;AACH,aAAO,KAAK;AACZ,YAAM;AAAA,IACV;AAAA,EACJ,OAAO;AACH,cAAU,IAAI,QAAQ,CAAC,YAAY;AAC/B,qBAAe,YAAY;AACvB,cAAM,UAAU,aAAa,OAAO;AAEpC,mBAAW,UAAU,SAAS;AAC1B,cAAI;AACA,kBAAM,OAAO,MAAM;AAAA,UACvB,SAAS,OAAO;AACZ,oBAAQ,MAAM,KAAK;AAAA,UACvB;AAAA,QACJ;AAEA,kBAAU;AAEV,gBAAQ;AAAA,MACZ,CAAC;AAAA,IACL,CAAC;AAED,UAAM;AAAA,EACV;AACJ;;;AC7CO,IAAM,QAAQ,SAAU,QAAgB;AAC3C,SAAO;AAAA,IACH,IAAI,SAAS;AACT,aAAO,QAAQ;AAAA,IACnB;AAAA;AAAA,IAEA,MAAM,UAAkC;AACpC,aAAQ,QAAQ,MAAM,YAAY,GAAe,cAAc,QAAQ;AAAA,IAC3E;AAAA,EACJ;AACJ;;;ACOO,IAAM,iBAAiB,SAAUC,UAAkB,QAAgB,QAAa,QAAmB;AACtG,MAAI,WAAW,QAAQ;AACnB;AAAA,EACJ;AAEA,MAAI,CAAC,OAAO,MAAM;AACd,YAAQ,KAAK,gCAAgC;AAC7C;AAAA,EACJ;AAEA,MAAI,QAAQ,OAAO,IAAI,GAAG;AACtB,QAAIA,SAAQ,aAAa,UAAU;AAC/B,YAAM,UAAWA,SAA8B;AAC/C,YAAM,QAAQ,MAAM,QAAQ,MAAM;AAClC,iBAAW,UAAU,SAAS;AAC1B,eAAO,WAAW,QAAQ,OAAO,SAAS,OAAO,KAAK,IAAI,GAAG,MAAM,OAAO,OAAO;AAAA,MACrF;AAAA,IACJ,OAAO;AACH,aAAO,QAAQ,QAAQ,MAAM;AAC7B,MAAAA,SAAQ,aAAa,OAAO,MAAM,OAAO,KAAK;AAC9C,cAAQ,IAAIA,UAAS,OAAO,MAAM,OAAO,KAAK;AAAA,IAClD;AAAA,EACJ,WAAW,OAAO,OAAO,IAAI,GAAG;AAC5B,WAAO,QAAQ,UAAU,MAAM;AAE/B,QAAI,cAAc,OAAO,KAAK,GAAG;AAC7B,MAAAA,SAAQ,gBAAgB,OAAO,IAAI;AACnC,cAAQ,KAAK,8BAA8B,OAAO,IAAI,gBAAgB,OAAO,KAAK,eAAe;AACjG;AAAA,IACJ;AAEA,IAAAA,SAAQ,aAAa,OAAO,MAAM,OAAO,KAAK;AAC9C,YAAQ,IAAIA,UAAS,OAAO,MAAM,OAAO,KAAK;AAAA,EAClD,WAAW,OAAO,OAAO,IAAI,GAAG;AAC5B,UAAM,OAAO,CAAC,CAAC;AAEf,QAAI,MAAM;AACN,MAAAA,SAAQ,aAAa,OAAO,MAAM,EAAE;AAAA,IACxC,OAAO;AACH,MAAAA,SAAQ,gBAAgB,OAAO,IAAI;AAAA,IACvC;AAEA,YAAQ,IAAIA,UAAS,OAAO,MAAM,IAAI;AAAA,EAC1C,WAAW,MAAM,OAAO,IAAI,GAAG;AAG3B,QAAIA,SAAQ,aAAa,OAAO,IAAI,GAAG;AACnC,MAAAA,SAAQ,gBAAgB,OAAO,IAAI;AAAA,IACvC;AAEA,QAAI,OAAO,OAAO,UAAU,YAAY;AACpC,MAAAA,SAAQ;AAAA,QACJ,QAAQ,OAAO,IAAI;AAAA,QACnB,OAAO;AAAA,QACP,SAAS,CAAC,KAAK;AAAA,MACnB;AAAA,IACJ;AAEA,UAAM,SAAS,OAAO,WAAW,aAAa,SAAS,SAAS,CAAC;AAEjE,QAAI,OAAO,WAAW,YAAY;AAC9B,aAAO,QAAQ,KAAK,8BAA8B,OAAO,IAAI,uBAAuB;AAAA,IACxF;AAEA,QAAI;AACJ,WAAO,QAAQ,WAAY;AACvB,UAAIA,SAAQ,aAAa,WAAYA,SAA6B,SAAS,SAAS;AAChF,cAAM,SAASA,SAAQ,cAAc,iBAAmC,eAAgBA,SAA6B,IAAI,IAAI;AAC7H,mBAAW,SAAS,QAAQ;AACxB,cAAI,MAAM,SAAS;AACf,wBAAY,MAAM;AAAA,UACtB;AAAA,QACJ;AAAA,MACJ;AAEA,YAAM,YAAY,OAAO,KAAK,MAAM,MAAM,MAAM,CAAC;AAEjD,UAAI,cAAc,WAAW;AACzB,oBAAY;AACZ,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX;AAEA,QAAI,OAAO,OAAO,IAAI,GAAG;AACrB,aAAO,MAAM;AAAA,IACjB,WAAW,UAAU,OAAO,IAAI,GAAG;AAC/B,iBAAW,OAAO,OAAO,SAAS,CAAC,CAAC;AAAA,IACxC,OAAO;AACH,MAAAA,SAAQ,iBAAiB,QAAQ,OAAO,IAAI,GAAG,OAAO,OAAO,SAAS,CAAC,KAAK,IAAI;AAAA,IACpF;AAAA,EACJ,OAAO;AACH,WAAO,QAAQ;AACf,IAAAA,SAAQ,aAAa,OAAO,MAAM,OAAO,KAAK;AAC9C,YAAQ,IAAIA,UAAS,OAAO,MAAM,OAAO,KAAK;AAAA,EAClD;AACJ;;;AChHA,IAAM,kBAAkB,SAAU,MAA0B;AACxD,SAAO,OAAO,UAAU,IAAI,KAAK,IAAI,gBAAgB,OAAO,OAAO,QAAQ,IAAI;AACnF;AAEO,IAAM,OAAO,SAAU,MAAY,QAAgB,QAAa,QAAmB;AACtF,MAAI,WAAW,QAAQ,WAAW,QAAW;AACzC,QAAI,KAAK,gBAAgB,IAAI;AACzB,WAAK,cAAc;AAAA,IACvB;AAAA,EACJ,WAAW,SAAS,UAAU,GAAG;AAC7B,QAAI,CAAC,OAAO,OAAO;AACf,aAAO,QAAQ,SAAS,eAAe,EAAE;AACzC,iBAAW,OAAO,OAAO,IAAI;AAAA,IACjC;AAEA,QAAI,CAAC,OAAO,KAAK;AACb,WAAK,cAAc;AACnB,aAAO,MAAM;AAAA,IACjB;AAEA,kBAAc,OAAO,OAAO,OAAO,GAAG;AACtC,eAAW,OAAO,GAAG,OAAO,GAAG;AAAA,EACnC,WAAW,kBAAkB,kBAAkB;AAC3C,QAAI,CAAC,OAAO,OAAO;AACf,aAAO,QAAQ,SAAS,eAAe,EAAE;AACzC,iBAAW,OAAO,OAAO,IAAI;AAAA,IACjC;AAEA,QAAI,CAAC,OAAO,KAAK;AACb,WAAK,cAAc;AACnB,aAAO,MAAM;AAAA,IACjB;AAEA,kBAAc,OAAO,OAAO,OAAO,GAAG;AACtC,eAAW,QAAQ,OAAO,GAAG;AAAA,EACjC,WAAW,WAAW,MAAM,GAAG;AAG3B,QAAI,OAAO,WAAW,QAAW;AAC7B,aAAO,SAAS;AAAA,IACpB;AAEA,QAAI,CAAC,OAAO,SAAS;AACjB,aAAO,UAAU,CAAC;AAAA,IACtB;AAEA,QAAI,CAAC,OAAO,SAAS;AACjB,aAAO,UAAU,CAAC;AAAA,IACtB;AAEA,QAAI,CAAC,OAAO,OAAO;AACf,aAAO,QAAQ,SAAS,eAAe,EAAE;AACzC,iBAAW,OAAO,OAAO,IAAI;AAAA,IACjC;AAEA,QAAI,CAAC,OAAO,KAAK;AACb,WAAK,cAAc;AACnB,aAAO,MAAM;AAAA,IACjB;AAEA,UAAM,YAAY,OAAO;AACzB,UAAM,YAAY,OAAO;AACzB,UAAM,eAAe,KAAK,IAAI,WAAW,SAAS;AAGlD,aAAS,QAAQ,GAAG,QAAQ,cAAc,SAAS;AAC/C,UACI,OAAO,KAAK,MAAM,OAAO,QAAQ,KAAK,KACtC,OAAO,KAAK,IAAI,UAAU,KAAK,OAAO,QAAQ,KAAK,IAAI,UAAU,KAAK,OAAO,KAAK,IAAI,UAAU,MAAM,OAAO,QAAQ,KAAK,IAAI,UAAU,EAC1I;AAEF,YAAM,SAAS,OAAO,QAAQ,KAAK;AACnC,YAAM,OAAO,OAAO,QAAQ,QAAQ,CAAC,KAAK,OAAO;AACjD,aAAO,KAAK,mBAAmB,KAAK,oBAAoB,QAAQ;AAC5D,mBAAW,KAAK,eAAe;AAAA,MACnC;AAEA,YAAM,QAAQ,gBAAgB,OAAO,KAAK,CAAC;AAC3C,gBAAU,OAAO,MAAM;AACvB,cAAQ,IAAI,OAAO,QAAQ,KAAK,GAAG,OAAO,KAAK,GAAG,OAAO,MAAM;AAE/D,aAAO,QAAQ,KAAK,IAAI,OAAO,KAAK;AAAA,IACxC;AAEA,QAAI,YAAY,WAAW;AACvB,aAAO,OAAO,WAAW,OAAO,QAAQ;AACpC,cAAM,SAAS,SAAS,eAAe,EAAE;AACzC,cAAM,QAAQ,gBAAgB,OAAO,OAAO,MAAM,CAAC;AAEnD,eAAO,QAAQ,KAAK,MAAM;AAC1B,eAAO,QAAQ,KAAK,OAAO,OAAO,MAAM,CAAC;AAEzC,mBAAW,QAAQ,OAAO,GAAG;AAC7B,mBAAW,OAAO,OAAO,GAAG;AAC5B,eAAO;AAAA,MACX;AAAA,IACJ,WAAW,YAAY,WAAW;AAS9B,YAAM,SAAS,OAAO,QAAQ,OAAO,SAAS,CAAC;AAC/C,YAAM,OAAO,OAAO;AACpB,aAAO,KAAK,mBAAmB,KAAK,oBAAoB,QAAQ;AAC5D,mBAAW,KAAK,eAAe;AAAA,MACnC;AAEA,aAAO,SAAS,OAAO;AACvB,aAAO,QAAQ,SAAS,OAAO;AAC/B,aAAO,QAAQ,SAAS,OAAO;AAAA,IACnC;AAAA,EACJ,WAAW,kBAAkB,MAAM;AAC/B,gBAAY,QAAQ,IAAI;AAAA,EAC5B,OAAO;AACH,QAAI,KAAK,gBAAgB,GAAG,MAAM,IAAI;AAClC;AAAA,IACJ,OAAO;AACH,WAAK,cAAc,GAAG,MAAM;AAAA,IAChC;AAAA,EACJ;AACJ;;;AC7GA,IAAM,UAAU,SAAU,MAAe,MAAW,QAAa,QAAmB;AAChF,UAAQ,KAAK,gCAAgC;AACjD;AAEO,IAAM,SAAS,SAAU,QAAgB;AAC5C,QAAM,OAAO,OAAO;AAEpB,MAAI,CAAC,MAAM;AACP;AAAA,EACJ;AAIA,MAAI,CAAC,YAAY,IAAI,KAAK,OAAO,eAAe;AAC5C;AAAA,EACJ;AAEA,QAAM,WAAW,OAAO;AACxB,QAAM,aAAa,OAAO,aAAa;AACvC,QAAM,aAAa,cAAe,SAAiB,UAAU;AAC7D,QAAMC,UAAS,OAAO,SAAS,KAAK,MAAM,OAAO,IAAI;AACrD,QAAM,aAAa,CAAC,cAAc,CAACA,WAAU;AAE7C,MAAIA,WAAU,cAAc,CAAC,YAAY;AACrC,WAAO,OAAO;AAAA,EAClB;AAEA,QAAM,SAAS,aAAa,SAAS,MAAM,MAAM,CAAC,IAAI,aAAa,SAAS,IAAI;AAEhF,QAAM,SAAS,OAAO;AACtB,MACI,YAAY,WAER,WAAW,UACX,SAAS,UAAU,KAAK,SAAS,UAAU,KAAK,SAAS,UAAU,MAAM,SAAS,UAAU,IAElG;AACE;AAAA,EACJ;AAEA,MAAI,OAAO,SAAS,GAAG;AACnB,YAAQ,MAAiB,QAAQ,QAAQ,MAAM;AAAA,EACnD,WAAW,OAAO,SAAS,GAAG;AAC1B,kBAAc,MAAiB,QAAQ,QAAQ,MAAM;AAAA,EACzD,WAAW,OAAO,SAAS,GAAG;AAC1B,mBAAe,MAAiB,QAAQ,QAAQ,MAAM;AAAA,EAC1D,WAAW,OAAO,SAAS,GAAG;AAC1B,SAAK,MAAc,QAAQ,QAAQ,MAAM;AAAA,EAC7C,OAAO;AACH,UAAM,IAAI,MAAM,4BAA4B;AAAA,EAChD;AAEA,SAAO,SAAS;AAChB,SAAO,gBAAgB;AAC3B;;;AC5BO,IAAM,OAAO,SAChB,MACA,OACA,WACA,eACA,eACA,gBACF;AACE,QAAM,SAAiB;AAAA,IACnB;AAAA;AAAA;AAAA,IAIA,eAAe;AAAA,IAEf,IAAI,WAAW;AACX,aAAO,UAAU,KAAK;AAAA,IAC1B;AAAA,IAEA,IAAI,SAAS,MAAW;AACpB,gBAAU,KAAK,IAAI;AAAA,IACvB;AAAA,IAEA,IAAI,OAAO;AACP,YAAM,OAAO,cAAc,IAAI;AAC/B,UAAI,MAAM;AACN,eAAO;AAAA,MACX,OAAO;AACH,qBAAa,OAAO,IAAI;AACxB,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,IAEA,IAAI,OAAO;AACP,aAAQ,cAAqC,IAAI;AAAA,IACrD;AAAA,IAEA,IAAI,KAAK,MAAc;AACnB,MAAC,cAAqC,IAAI,IAAI;AAAA,IAClD;AAAA,IAEA,IAAI,QAAQ;AACR,aAAQ,eAAsC,IAAI;AAAA,IACtD;AAAA,IAEA,IAAI,MAAM,OAAe;AACrB,MAAC,eAAsC,IAAI,KAAK;AAAA,IACpD;AAAA,IAEA,SAAS;AACL,mBAAa,OAAO,IAAI;AAAA,IAC5B;AAAA,IAEA,MAAM;AACF,mBAAa,IAAI,IAAI;AAAA,IACzB;AAAA,EACJ;AA8BA,SAAO,IAAI;AAEX,SAAO;AACX;;;AC/HA,IAAM,SAAS,eAAe;AAEvB,IAAM,aAAa,SACtB,UACA,WACA,QACA,WACuC;AACvC,MAAI,OAAO,cAAc,UAAU;AAC/B,UAAM,YAAY,SAAS,cAAc,SAAS;AAClD,QAAI,CAAC,UAAW,OAAM,IAAI,MAAM,iBAAiB;AACjD,UAAM,QAAQ,gBAAgB,IAAI,SAAS;AAC3C,QAAI,SAAS,UAAU,UAAU;AAE7B,aAAO;AAAA,IACX,OAAO;AACH,sBAAgB,IAAI,WAAW,QAAQ;AAAA,IAC3C;AAAA,EACJ,WAAW,qBAAqB,WAAW,qBAAqB,YAAY;AACxE,UAAM,QAAQ,gBAAgB,IAAI,SAAS;AAC3C,QAAI,SAAS,UAAU,UAAU;AAE7B,aAAO;AAAA,IACX,OAAO;AACH,sBAAgB,IAAI,WAAW,QAAQ;AAAA,IAC3C;AAAA,EACJ;AAEA,QAAM,UAAoB,CAAC;AAC3B,QAAM,WAAW,SAAS,QAAQ,UAAU,IAAI;AAChD,QAAM,SAAS,SAAS,iBAAiB,UAAU,QAAQ,IAAI;AAE/D,MAAI;AACJ,MAAI,QAAQ;AAEZ,SAAO,OAAO,SAAS,GAAG;AACtB,WAAO,OAAO;AACd,UAAM,OAAO,KAAK;AAElB,QAAI,SAAS,WAAW;AACpB,UAAIC,QAAO;AAEX,YAAM,aAAaA,MAAK,WAAW,QAAQ,MAAM,KAAK;AACtD,UAAI,eAAe,GAAI;AAEvB,UAAI,eAAe,GAAG;AAClB,QAAAA,MAAK,UAAU,UAAU;AACzB,eAAO,OAAO,SAAS;AACvB,QAAAA,QAAO;AAAA,MACX;AAEA,YAAM,WAAW,OAAO;AACxB,UAAI,aAAaA,MAAK,WAAW,QAAQ;AACrC,QAAAA,MAAK,UAAU,QAAQ;AAAA,MAC3B;AAEA,YAAM,gBAAgB,UAAgBA,KAAI;AAC1C,YAAM,SAAS,KAAK,GAAG,SAAS,WAAW,aAAa;AACxD,cAAQ,QAAQ,MAAM;AAAA,IAE1B,WAAW,SAAS,cAAc;AAC9B,YAAMC,WAAU;AAChB,YAAM,MAAMA,SAAQ;AAEpB,UAAI,QAAQ,WAAW,QAAQ,UAAU;AACrC,eAAO,YAAY;AAAA,MACvB;AAEA,UAAI;AAEJ,UAAI,YAAY,KAAK,MAAM,GAAG;AAC1B,wBAAgB,UAAU,IAAI;AAC9B,cAAM,SAAS,KAAK,GAAG,SAAS,WAAW,aAAa;AACxD,gBAAQ,QAAQ,MAAM;AAAA,MAE1B;AAEA,YAAM,QAAQA,SAAQ,kBAAkB;AACxC,iBAAW,QAAQ,OAAO;AACtB,cAAM,QAAQA,SAAQ,aAAa,IAAI,KAAK;AAC5C,cAAM,kBAAkB,YAAY,MAAM,MAAM;AAChD,cAAM,iBAAiB,UAAU,OAAO,MAAM;AAE9C,YAAI,mBAAmB,gBAAgB;AACnC,0BAAgB,iBAAiB,UAAU,IAAI;AAE/C,cAAI,mBAAmB,gBAAgB;AACnC,kBAAM,gBAAgB,UAAkB,EAAE;AAC1C,kBAAM,iBAAiB,UAAkB,EAAE;AAC3C,kBAAM,aAAa,KAAK,GAAG,SAAS,WAAW,eAAe,eAAe,cAAc;AAC3F,kBAAM,cAAc,KAAK,GAAG,SAAS,WAAW,eAAe,eAAe,cAAc;AAC5F,YAAAA,SAAQ,gBAAgB,IAAI;AAC5B,oBAAQ,QAAQ,UAAU;AAC1B,oBAAQ,QAAQ,WAAW;AAAA,UAG/B,WAAW,iBAAiB;AACxB,kBAAM,gBAAgB,UAAkB,EAAE;AAC1C,kBAAM,iBAAiB,UAAkB,KAAK;AAC9C,kBAAM,SAAS,KAAK,GAAG,SAAS,WAAW,eAAe,eAAe,cAAc;AACvF,YAAAA,SAAQ,gBAAgB,IAAI;AAC5B,oBAAQ,QAAQ,MAAM;AAAA,UAE1B,WAAW,gBAAgB;AACvB,kBAAM,gBAAgB,UAAkB,IAAI;AAC5C,kBAAM,iBAAiB,UAAkB,EAAE;AAC3C,kBAAM,SAAS,KAAK,GAAG,SAAS,WAAW,eAAe,eAAe,cAAc;AACvF,YAAAA,SAAQ,gBAAgB,IAAI;AAC5B,oBAAQ,QAAQ,MAAM;AAAA,UAE1B;AAAA,QACJ,OAAO;AACH,cAAI,OAAO,IAAI,GAAG;AACd,gBAAI,cAAc,KAAK,GAAG;AACtB,cAAAA,SAAQ,gBAAgB,IAAI;AAC5B,sBAAQ,KAAK,mBAAmB,IAAI,gBAAgB,KAAK,eAAe;AAAA,YAC5E;AAAA,UACJ,WAAW,MAAM,IAAI,GAAG;AACpB,YAAAA,SAAQ,gBAAgB,IAAI;AAC5B,oBAAQ,KAAK,mBAAmB,IAAI,eAAe;AAAA,UACvD;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,OAAO;AACH,cAAQ,KAAK,qBAAqB,IAAI,eAAe;AAAA,IACzD;AAAA,EACJ;AAEA,aAAW,UAAU,SAAS;AAC1B,WAAO,MAAM;AAAA,EACjB;AAEA,MAAI,OAAO,cAAc,UAAU;AAC/B,UAAM,YAAY,SAAS,cAAc,SAAS;AAClD,QAAI,CAAC,UAAW,OAAM,IAAI,MAAM,iBAAiB;AACjD,oBAAgB,WAAW,QAAQ;AACnC,WAAO;AAAA,EACX,WAAW,qBAAqB,WAAW,qBAAqB,YAAY;AACxE,oBAAgB,WAAW,QAAQ;AACnC,WAAO;AAAA,EACX,OAAO;AACH,WAAO;AAAA,EACX;AACJ;;;ACvJO,IAAM,OAAO,SAAU,MAAsB;AAChD,SAAO,KAAK,QAAQ,sBAAsB,OAAO;AACjD,SAAO,KAAK,YAAY;AACxB,SAAO,KAAK,SAAS,GAAG,IAAI,OAAO,KAAK,IAAI;AAC5C,SAAO;AACX;;;ACOO,IAAM,SAAS,SAAU,KAAa,QAAiB;AAC1D,SAAO,SAAU,aAAuC;AACpD,UAAM,OAAO,KAAK,GAAG;AACrB,UAAM,UAAU;AAChB,mBAAe,OAAO,MAAM,aAAa,EAAE,SAAS,QAAQ,CAAC;AAAA,EACjE;AACJ;;;AClBA,IAAM,SAAgD,oBAAI,QAAQ;AAE3D,IAAM,QAAQ,SAAU,UAAuB;AAClD,MAAI,SAAS,YAAY;AACrB,UAAM,OAAO,SAAS,YAAY;AAElC,aAAS,WAAW,mBAAmB,KAAK,GAAG,KAAK,kBAAkB;AAEtE,eAAW,aAAa,KAAK,aAAa;AACtC,UAAI,aAAwC,OAAO,IAAI,SAAS;AAEhE,UAAI,CAAC,YAAY;AACb,qBAAa,IAAI,cAAc;AAE/B,cAAM,EAAE,SAAS,IAAI;AACrB,mBAAW,EAAE,QAAQ,KAAK,UAAU;AAChC,qBAAW,WAAW,OAAO;AAAA,QACjC;AAEA,eAAO,IAAI,WAAW,UAAU;AAAA,MACpC;AAEA,eAAS,WAAW,mBAAmB,KAAK,UAAU;AAAA,IAC1D;AAAA,EACJ;AACJ;;;AC0DO,IAAM,OAAO,SAAU,YAAkC,WAAkC;AAC9F,MAAI;AACJ,MAAI;AAEJ,QAAM,QAAQ,eAAe,IAAI,OAAO;AAExC,MAAI,OAAO;AACP,aAAS,MAAM;AACf,eAAW,MAAM;AAAA,EACrB,OAAO;AACH,aAAS,KAAK;AAEd,QAAI,YAAY;AAEhB,UAAM,SAAS,QAAQ,SAAS;AAChC,aAAS,QAAQ,GAAG,QAAQ,QAAQ,SAAS;AACzC,mBAAa,GAAG,QAAQ,KAAK,CAAC,GAAG,MAAM;AAAA,IAC3C;AAEA,iBAAa,QAAQ,MAAM;AAE3B,eAAW,SAAS,cAAc,UAAU;AAC5C,aAAS,YAAY;AAErB,mBAAe,IAAI,SAAS,EAAE,UAAU,OAAO,CAAC;AAAA,EACpD;AAEA,QAAM,OAAO;AAAA,IACT,CAAC,UAAU,GAAG;AAAA,IACd,CAAC,UAAU,GAAG;AAAA,IACd,CAAC,cAAc,GAAG;AAAA,IAClB,CAAC,eAAe,GAAG;AAAA,EACvB;AAEA,SAAO,OAAO,OAAO,WAAW,KAAK,MAAM,UAAU,WAAW,MAAM,GAAG,IAAI;AACjF;",
  "names": ["element", "data", "element", "element", "isOnce", "text", "element"]
}
